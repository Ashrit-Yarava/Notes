% 1
@inproceedings{liu2019you,
  title={You cannot fix what you cannot find! an investigation of fault localization bias in benchmarking automated program repair systems},
  author={Liu, Kui and Koyuncu, Anil and Bissyand{\'e}, Tegawend{\'e} F and Kim, Dongsun and Klein, Jacques and Le Traon, Yves},
  booktitle={2019 12th IEEE conference on software testing, validation and verification (ICST)},
  pages={102--113},
  year={2019},
  organization={IEEE}
}

% 2
@inproceedings{baudry2006improving,
  title={Improving test suites for efficient fault localization},
  author={Baudry, Benoit and Fleurey, Franck and Le Traon, Yves},
  booktitle={Proceedings of the 28th international conference on Software engineering},
  pages={82--91},
  year={2006}
}

% 3
@inproceedings{chen2024chatunitest,
  title={Chatunitest: A framework for llm-based test generation},
  author={Chen, Yinghao and Hu, Zehao and Zhi, Chen and Han, Junxiao and Deng, Shuiguang and Yin, Jianwei},
  booktitle={Companion Proceedings of the 32nd ACM International Conference on the Foundations of Software Engineering},
  pages={572--576},
  year={2024}
}

% 4
@inproceedings{wang2024hits,
  title={Hits: High-coverage llm-based unit test generation via method slicing},
  author={Wang, Zejun and Liu, Kaibo and Li, Ge and Jin, Zhi},
  booktitle={Proceedings of the 39th IEEE/ACM International Conference on Automated Software Engineering},
  pages={1258--1268},
  year={2024}
}

% 5
@article{zhang2410llm,
  title={Llm-based unit test generation via property retrieval. arXiv 2024},
  author={Zhang, Z and Liu, X and Lin, Y and Gao, X and Sun, H and Yuan, Y},
  journal={arXiv preprint arXiv:2410.13542}
}

% 6
@article{kang2024quantitative,
  title={A quantitative and qualitative evaluation of LLM-based explainable fault localization},
  author={Kang, Sungmin and An, Gabin and Yoo, Shin},
  journal={Proceedings of the ACM on Software Engineering},
  volume={1},
  number={FSE},
  pages={1424--1446},
  year={2024},
  publisher={ACM New York, NY, USA}
}

% 7
@article{qin2025s,
  title={S oap FL: A Standard Operating Procedure for LLM-based Method-Level Fault Localization},
  author={Qin, Yihao and Wang, Shangwen and Lou, Yiling and Dong, Jinhao and Wang, Kaixin and Li, Xiaoling and Mao, Xiaoguang},
  journal={IEEE Transactions on Software Engineering},
  year={2025},
  publisher={IEEE}
}

% 8
@inproceedings{cho2025cosmosfl,
  title={COSMosFL: Ensemble of Small Language Models for Fault Localisation},
  author={Cho, Hyunjoon and Kang, Sungmin and An, Gabin and Yoo, Shin},
  booktitle={2025 IEEE/ACM International Workshop on Large Language Models for Code (LLM4Code)},
  pages={17--24},
  year={2025},
  organization={IEEE}
}

% 9
@inproceedings{lou2021boosting,
  title={Boosting coverage-based fault localization via graph-based representation learning},
  author={Lou, Yiling and Zhu, Qihao and Dong, Jinhao and Li, Xia and Sun, Zeyu and Hao, Dan and Zhang, Lu and Zhang, Lingming},
  booktitle={Proceedings of the 29th ACM joint meeting on european software engineering conference and symposium on the foundations of software engineering},
  pages={664--676},
  year={2021}
}

% 10
@article{konstantinou2025yate,
  title={YATE: The Role of Test Repair in LLM-Based Unit Test Generation},
  author={Konstantinou, Michael and Degiovanni, Renzo and Zhang, Jie M and Harman, Mark and Papadakis, Mike},
  journal={arXiv preprint arXiv:2507.18316},
  year={2025}
}

% 11
@inproceedings{nan2025test,
  title={Test intention guided llm-based unit test generation},
  author={Nan, Zifan and Guo, Zhaoqiang and Liu, Kui and Xia, Xin},
  booktitle={2025 IEEE/ACM 47th International Conference on Software Engineering (ICSE)},
  pages={779--779},
  year={2025},
  organization={IEEE Computer Society}
}

% 12
@inproceedings{xuan2014test,
  title={Test case purification for improving fault localization},
  author={Xuan, Jifeng and Monperrus, Martin},
  booktitle={Proceedings of the 22nd ACM SIGSOFT international symposium on foundations of software engineering},
  pages={52--63},
  year={2014}
}

% 13
@article{papadakis2015metallaxis,
  title={Metallaxis-FL: mutation-based fault localization},
  author={Papadakis, Mike and Le Traon, Yves},
  journal={Software Testing, Verification and Reliability},
  volume={25},
  number={5-7},
  pages={605--628},
  year={2015},
  publisher={Wiley Online Library}
}

% 14
@inproceedings{ren2014defects4j,
author = {Just, Ren\'{e} and Jalali, Darioush and Ernst, Michael D.},
title = {Defects4J: a database of existing faults to enable controlled testing studies for Java programs},
year = {2014},
isbn = {9781450326452},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2610384.2628055},
doi = {10.1145/2610384.2628055},
abstract = {Empirical studies in software testing research may not be comparable, reproducible, or characteristic of practice. One reason is that real bugs are too infrequently used in software testing research. Extracting and reproducing real bugs is challenging and as a result hand-seeded faults or mutants are commonly used as a substitute. This paper presents Defects4J, a database and extensible framework providing real bugs to enable reproducible studies in software testing research. The initial version of Defects4J contains 357 real bugs from 5 real-world open source pro- grams. Each real bug is accompanied by a comprehensive test suite that can expose (demonstrate) that bug. Defects4J is extensible and builds on top of each program’s version con- trol system. Once a program is configured in Defects4J, new bugs can be added to the database with little or no effort. Defects4J features a framework to easily access faulty and fixed program versions and corresponding test suites. This framework also provides a high-level interface to common tasks in software testing research, making it easy to con- duct and reproduce empirical studies. Defects4J is publicly available at http://defects4j.org.},
booktitle = {Proceedings of the 2014 International Symposium on Software Testing and Analysis},
pages = {437–440},
numpages = {4},
keywords = {Bug database, real bugs, testing framework},
location = {San Jose, CA, USA},
series = {ISSTA 2014}
}


